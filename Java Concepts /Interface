package edible;

interface Edible{
    public abstract String howToEat();
}
abstract class Animal{
    public abstract String sound(); 
}
class Chicken extends Animal implements Edible{
    @Override
    public String howToEat(){
        return "Chicken: Fry it";
    }
    @Override
    public String sound(){
        return "Chicken: cock-a-doodle-doo";
    }
}
class Tiger extends Animal{
    @Override
    public String sound(){
        return "Tiger: RROOAARR";
    }
}
abstract class Fruit implements Edible{
    
}
class Apple extends Fruit{
    @Override
    public String howToEat(){
        return "Apple: Make apple cider";
    }
}
class Orange extends Fruit{
    @Override
    public String howToEat(){
        return "Orange: Make orange juice";
    }
}

public class Java {

        public static void main(String[] args) {
            Object[] objects = {new Tiger(), new Chicken(), new Apple()};
            for (Object object : objects) {
                if (object instanceof Edible edible) {
                    System.out.println(edible.howToEat());
                }
                if (object instanceof Animal animal) {
                    System.out.println(animal.sound());
                }
            }
    }

    
}
